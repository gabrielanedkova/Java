package bg.uni.sofia.fmi.mjt.cinema.reservation.system;

import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.SortedSet;
import java.util.TreeSet;

import bg.uni.sofia.fmi.mjt.cinema.reservation.system.core.Hall;
import bg.uni.sofia.fmi.mjt.cinema.reservation.system.core.Movie;
import bg.uni.sofia.fmi.mjt.cinema.reservation.system.core.MovieGenre;
import bg.uni.sofia.fmi.mjt.cinema.reservation.system.core.Projection;
import bg.uni.sofia.fmi.mjt.cinema.reservation.system.core.Seat;
import bg.uni.sofia.fmi.mjt.cinema.reservation.system.core.Ticket;
import bg.uni.sofia.fmi.mjt.cinema.reservation.system.exceptions.AlreadyReservedException;
import bg.uni.sofia.fmi.mjt.cinema.reservation.system.exceptions.ExpiredProjectionException;
import bg.uni.sofia.fmi.mjt.cinema.reservation.system.exceptions.InvalidSeatException;
import bg.uni.sofia.fmi.mjt.cinema.reservation.system.exceptions.ProjectionNotFoundException;
import bg.uni.sofia.fmi.mjt.cinema.reservation.system.exceptions.ReservationNotFoundException;

public class Test {

	public static void main(String[] args) throws ReservationNotFoundException, ProjectionNotFoundException, AlreadyReservedException, InvalidSeatException, ExpiredProjectionException {
		Map<Movie, List<Projection>> program = new HashMap<Movie, List<Projection>>();
		Map<Movie, List<Projection>> program1= new HashMap<Movie, List<Projection>>();
		
		List<Projection> list = new LinkedList<Projection>();
		Hall hall = new Hall(3, 13, 23);
		Movie movie = new Movie("ha", 12, MovieGenre.ACTION);
		Projection p1 = new Projection(movie, hall, LocalDateTime.now().plusDays(11));
		Projection p2 = new Projection(movie, hall, LocalDateTime.now().plusDays(1));
		list.add(p1);
		list.add(p2);
		Movie movie1 = new Movie("pisna mi", 12, MovieGenre.DRAMA);
		Projection p3 = new Projection(movie1, hall, LocalDateTime.now().plusDays(13));
		Projection p4 = new Projection(movie1, hall, LocalDateTime.now().plusDays(9));

		program.put(movie, list);
		program1.put(movie, list);
		program1.put(new Movie("gabi", 123, MovieGenre.ADVENTURE), list);
		
		System.out.println(program.containsKey(movie));
		CinemaCity cinemaCity = new CinemaCity(program);
		Ticket ticket = new Ticket(p1, new Seat(1, 3), "az");
		cinemaCity.bookTicket(ticket);
		System.out.println(p1.getFreeSeatsNumber());
		cinemaCity.cancelTicket(ticket);
		System.out.println(p1.getFreeSeatsNumber());
		
		List<Projection> list1 = new LinkedList<Projection>();
		list1.add(p1);
		list1.add(p2);
		
		TreeSet<Movie> mov = (TreeSet<Movie>) cinemaCity.getMovies();
		System.out.println(mov);
		/*for(Movie m: program)
		if(program.equals(program1))
		{
			System.out.println("da");
		}
		*/

	}

}
